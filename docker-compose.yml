# Docker Compose - Citrino PostgreSQL + PostGIS UTF-8 Nativo
# Soluci칩n definitiva al problema de encoding Windows

services:
  citrino-db:
    build: .
    container_name: citrino-postgresql
    hostname: citrino-db
    ports:
      - "5433:5432"
    environment:
      # Configuraci칩n UTF-8 espa침ol nativo
      POSTGRES_DB: citrino
      POSTGRES_USER: citrino_app
      POSTGRES_PASSWORD: citrino123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=es_ES.UTF-8"

      # Variables de encoding forzadas
      LANG: es_ES.UTF-8
      LANGUAGE: es_ES:es
      LC_ALL: es_ES.UTF-8
      PYTHONIOENCODING: utf-8

    volumes:
      # Persistencia de datos
      - citrino_data:/var/lib/postgresql/data

      # Scripts SQL y migraci칩n
      - ./migration/database:/docker-entrypoint-initdb.d

      # Datos para procesar
      - ./data:/app/data

    networks:
      - citrino-network

    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U citrino_app -d citrino"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # API Flask opcional para desarrollo
  citrino-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: citrino-api
    ports:
      - "5001:5001"
    environment:
      DB_HOST: citrino-db
      DB_PORT: 5432
      DB_NAME: citrino
      DB_USER: citrino_app
      DB_PASSWORD: citrino123

      # Encoding nativo
      PYTHONIOENCODING: utf-8
      LANG: es_ES.UTF-8
      LC_ALL: es_ES.UTF-8

    volumes:
      - ./api:/app/api
      - ./src:/app/src
      - ./data:/app/data

    depends_on:
      citrino-db:
        condition: service_healthy

    networks:
      - citrino-network

    restart: unless-stopped

volumes:
  citrino_data:
    driver: local

networks:
  citrino-network:
    driver: bridge